import { createSlice, PayloadAction } from "@reduxjs/toolkit";

// Define the type for the filter state
interface CampaignFiltersState {
  channels: string[]; // Filter by advertising channels
  startDate: string | null; // Filter by start date
  endDate: string | null; // Filter by end date
  budgetRange: [number, number] | null; // Filter by budget range
  selectedCampaignId: string | null; // Currently selected campaign (for editing)
}

// Define the initial state of the filter slice
const initialState: CampaignFiltersState = {
  channels: [], // No channels selected by default
  startDate: null, // No start date filter by default
  endDate: null, // No end date filter by default
  budgetRange: null, // No budget range filter by default
  selectedCampaignId: null, // No campaign selected by default
};

// Create the slice
const campaignSlice = createSlice({
  name: "campaign", // Unique name for this slice
  initialState,
  reducers: {
    // Update the channel filter
    setChannels(state, action: PayloadAction<string[]>) {
      state.channels = action.payload;
    },
    // Update the start date filter
    setStartDate(state, action: PayloadAction<string | null>) {
      state.startDate = action.payload;
    },
    // Update the end date filter
    setEndDate(state, action: PayloadAction<string | null>) {
      state.endDate = action.payload;
    },
    // Update the budget range filter
    setBudgetRange(state, action: PayloadAction<[number, number] | null>) {
      state.budgetRange = action.payload;
    },
    // Set the currently selected campaign
    setSelectedCampaign(state, action: PayloadAction<string | null>) {
      state.selectedCampaignId = action.payload;
    },
    // Reset all filters to their initial values
    resetFilters(state) {
      state.channels = [];
      state.startDate = null;
      state.endDate = null;
      state.budgetRange = null;
    },
  },
});

// Export the actions generated by the slice
export const {
  setChannels,
  setStartDate,
  setEndDate,
  setBudgetRange,
  setSelectedCampaign,
  resetFilters,
} = campaignSlice.actions;

// Export the reducer to be added to the Redux store
export default campaignSlice.reducer;
